#!/usr/bin/env python


import sys

from spike.compiler.scheck import check, declareBuiltIn
from spike.compiler.symbols import SymbolTable
from spike.compiler import parse, Notifier
from spike.compiler.statements import Compound


def main(argv):
    
    if len(argv) < 2:
        print >>sys.stderr, "Spike Compiler"
        print >>sys.stderr, "usage: %s FILE ..." % argv[0]
        return 1
    
    notifier = Notifier()
    
    st = SymbolTable()
    declareBuiltIn(st, notifier)
    
    tree = Compound([])
    
    for arg in argv[1:]:
        pathname = arg
        tree.extend(parse(pathname))
    
    if not tree:
        return 1
    
    check(tree, st, notifier)
    
    notifier.failOnError()
    
    #X86CodeGen_GenerateCode(tree, sys.stdout)
    
    return 0


sys.exit(main(sys.argv))

