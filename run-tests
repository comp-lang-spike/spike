#!/usr/bin/env python


tests = [
    "examples/accgen.spk",
    "examples/blocks.spk",
    "examples/circle.spk",
    "examples/fibgen.spk",
    "examples/fib.spk",
    "examples/fma.spk",
    "examples/foreach.spk",
    "examples/functor.spk",
    "examples/hello.spk",
    "examples/lst/8queen.spk",
    "examples/lst/blocks.spk",
    "examples/lst/cond.spk",
    "examples/lst/super.spk",
    "examples/lst/temp.spk",
    "examples/nlines.spk",
    "examples/point.spk",
    "examples/primes.spk",
    "tests/attr.spk",
    "tests/bc-in-blocks.spk",
    "tests/cycle.spk",
    "tests/default-args.spk",
    "tests/dnu.spk",
    "tests/dot-star.spk",
    #"tests/empty.spk",
    "tests/fe.spk",
    "tests/gen.spk",
    "tests/gremlin.spk",
    "tests/index.spk",
    "tests/iter-musings.spk",
    "tests/kw-permutations.spk",
    "tests/leaf.spk",
    "tests/my-array.spk",
    "tests/no-main.spk",
    "tests/old.spk",
    #"tests/pi.spk",
    "tests/rodata.spk",
    "tests/static-errors.spk",
    #"tests/syntax-error.spk",
    "tests/unary-kw.spk",
    "tests/varargs.spk",
    ]


def scheck(tree):
    from spike.compiler.scheck import check, declareBuiltIn
    from spike.compiler.symbols import SymbolTable
    from spike.compiler import Notifier

    notifier = Notifier()
    st = SymbolTable()
    declareBuiltIn(st, notifier)
    check(tree, st, notifier)
    return


def spike(pathname):
    from spike.compiler import parse
    tree = parse(pathname)
    scheck(tree)


for pathname in tests:
    print pathname
    spike(pathname)

