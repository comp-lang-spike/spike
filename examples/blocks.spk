#!/usr/bin/env spike-1


// from chapter 2 of blue book

page33() {
    obj incrementBlock, sumBlock;
    obj sum, index;
    
    incrementBlock = [index += 1 ];
    sumBlock = [sum + index * index ];
    sum = 0;
    index = 1;
    sum = sumBlock();
    incrementBlock();
    sum = sumBlock();
    
    stdout.printf("The sum is %d.\n", sum);
    stdout.printf("The index is %d.\n", index);
    
    obj amount;
    amount = 1;
    timesRepeat(4, [amount += amount]);
    stdout.printf("The amount is %d.\n", amount);
}

timesRepeat(count, aBlock) {
    while (count-- > 0)
        aBlock();
}


// from "Classic Smalltalk Bugs" by Ralph Johnson
// ftp://st.cs.uiuc.edu/pub/Smalltalk/st-docs/classic-bugs.txt

amusingProblem() {
    obj anotherArray, aBlockArray;
    
    aBlockArray = Array.new(4);
    anotherArray = Array.new(4);
    anotherArray[0] = 1;
    anotherArray[1] = 2;
    anotherArray[2] = 4;
    anotherArray[3] = 8;
    
    obj range;
    range = Range.new().init(0, aBlockArray.size);
    range do:
        [obj anIndex;
         aBlockArray[anIndex] = [anotherArray[anIndex] * 2]
            ];
    
    obj i, result;
    for (i = 0; i < aBlockArray.size; ++i) {
        result = (aBlockArray[i])();
        stdout.printf("%d\n", result);
    }
}

class Range {
    obj begin, end;
    
    init(i, j) { begin = i; end = j; return self; }
    
    self do: block {
        obj i;
        for (i = begin; i < end; ++i) {
            block(i);
        }
    }
}


main(argv) {
    page33();
    amusingProblem();
    return 0;
}
