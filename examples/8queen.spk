#!/usr/bin/env spike

// Based on "8queen.st" from Little Smalltalk v1.

class Queen : Object {
    obj row, column, neighbor, boardSize;
    
    self build: n col: c size: s {
        neighbor = n;
        column = c;
        row = 1;
        boardSize = s;
        if (neighbor !== null)
            neighbor first;
        return self;
    }

    self checkCol: c row: r {
        obj cd;
        
        if (r == row)
            return false;
        cd = c - column;
        if (row + cd == r)
            return false;
        if (row - cd == r)
            return false;
        if (neighbor !== null)
            return neighbor checkCol: c row: r;
        return true;
    }
    
    self first {
        row = 1;
        return self checkRow;
    }

    self next {
        row = row + 1;
        return self checkRow;
    }

    self checkRow {
        if (neighbor === null)
            return row;
        while (row <= boardSize) {
            if (neighbor checkCol: column row: row)
                return row;
            else
                row = row + 1;
        }
        if ((neighbor next) === null)
            return null;
        return self first;
    }

    self printBoard {
        if (neighbor !== null)
            neighbor printBoard;
        printf("Col %d Row %d\n", column, row);
    }
}

main(argv) {
    obj last, size, x;

    size = 8;
    last = null;
    for (x = 1; x <= size; ++x) {
        last = Queen.new build: last col: x size: size;
    }
    last first;
    last printBoard;
    return 0;
}
