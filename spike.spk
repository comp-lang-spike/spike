
interpreter(argv) {
    obj sourcePathname = argv[1];
    obj stream = FileStream.open(sourcePathname, "r");
    if (stream == null) {
        stderr.printf("%s: cannot open '%s'\n", argv[0], sourcePathname);
        return 1;
    }
    
    obj st = SymbolTable.new();
    obj notifier = Notifier.new(stderr);
    
    st.declareBuiltIn(notifier);
    
    obj tb = TreeBuilder.new();
    
    obj parser = Parser.new(st, tb);
    obj tree = parser.parse(stream);
    tree = tree.source(sourcePathname);
    tree = tree.asModuleDef();
    tree.check(st, notifier);
    
    // XXX
    return;
    
    obj moduleClass = tree.generateCode();
    obj module = moduleClass.new();
    
    obj newArgv = Array.new(argv.size - 1);
    newArgv[0] = sourcePathname;
    obj i;
    for (i = 1; i < newArgv.size; ++i) {
        newArgv[i] = argv[i + 1];
    }
    
    stdout.printf("---- running %s\n", sourcePathname);
    module._init();
    module.main(newArgv);
    
    return 0;
}

main(argv) {
    if (argv.size > 1)
        return interpreter(argv);
    return 0;
}
