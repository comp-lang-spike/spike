#!/usr/bin/env spike

repr(o) { return o.printString; }

generator(gn) {
    obj i;
    i = 2;
    if (gn == 0) {
        return [yield 1; yield 2; yield 3; /*return 42;*/ for (;;) yield i+=2;] closure;
    } else if (gn == 1) {
        return [yield i+= 2; i] closure;
    }
    return [i += 2] closure;
}

main(argv) {
    obj gn, g, i, z;
    
    z = Zoo.new();
    z = z yield: "airplane";
    puts(z);
    
    for (gn = 0; gn < 3; ++gn) {
        puts("generate!");
        g = generator(gn);
        for (i = 0; i < 10; ++i) {
            printf("%s\n", repr(g()));
        }
        puts("");
    }
    
    obj b;
    b = down();
    printf("back from hell: %s\n", repr(b()));
    return 0;
}

down() {
    obj b;
    b = [for (;;) { yield 666; yield 42; } /*return b; cannotReenterBlock */ ];
    downDown(b);
    return b;
}

downDown(b) {
    obj i;
    for (i = 0; i < 10; ++i) {
        printf("pit of hell: %s\n", repr(b()));
    }
}


class Zoo : Object {
    self yield: tomato {
        return tomato;
    }
}
