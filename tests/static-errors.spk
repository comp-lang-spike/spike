#!/usr/bin/env spike

class Foo {
    obj +x; // invalid variable definition
    
    // invalid argument definitions
    red(a, -b) {
        return [ :(x + y) | return a; ];
    }
    green(a, b, c, ... +d) {}
    
    // invalid method declarators
    a = (b + c) {}
    (a + b) = c {}
    self(i) = v {}
    x[i] = v {}
    (a + b)() {}
    x[i] {}
    a + b {}
    self + (a + b) {}
    self - 2 {}
    self * 1 {}
    a foo {}
    a foo: b {}
    (a + b) foo {}
    (a - b) foo: c {}
    self && b {}
    (self + 1).x {}
    self === v {}
    42 {}
    self++ {}
    --self {}
}

// cycle in superclass chain
class Bar : Zoo {}
class Zoo : Tomato {}
class Tomato: Bar {}
class Ring : Ring {}

// invalid superclass specification
obj (Superman);
class Clark : Superman {}
(Loisfunc)() {}
class Lois : Loisfunc {}

more(a, b, c = 42, d) { // non-default arg follows default arg
    obj x += 1; // invalid variable definition
}








obj g;

local() {
    obj g;
    obj x;
    
    obj x; // symbol 'x' multiply defined
    
    return y; // symbol 'y' undefined
}

main(argv) {
    return 1;
}
